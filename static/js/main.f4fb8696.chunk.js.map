{"version":3,"sources":["helpers/urls.js","actions/posts.js","actions/actionTypes.js","components/PostList.js","helpers/utils.js","components/Navbar.js","actions/auth.js","components/Home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Settings.js","actions/friends.js","components/User.js","actions/profile.js","components/Friendlist.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["API_ROOT","APIUrls","userId","page","limit","fetchPosts","dispatch","url","fetch","then","response","json","data","console","log","type","posts","PostList","this","props","className","map","post","key","_id","to","user","src","alt","name","content","likes","length","comments","placeholder","Component","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","Navbar","handleLogout","removeItem","auth","isLoggedIn","id","onClick","React","connect","state","Home","friends","Page404","Login","handleEmailChange","e","setState","email","target","value","handlePasswordChange","password","handleFormSubmit","event","preventDefault","method","headers","body","success","setItem","token","error","message","login","inProgress","from","location","pathname","required","onChange","disabled","Signup","handleNameChange","username","handleConfirmPasswordChange","confirmPassword","confirm_password","signup","Settings","handleChange","fieldName","val","handleSave","Authorization","editUser","editMode","fetchFriends","removeFriend","User","handleAddFriend","a","match","options","successMessage","friend","friendship","handleRemoveFriend","to_user","indexOf","profile","ifUserFriend","checkUserFriend","Friendlist","PrivateRoute","privateRouteProps","path","component","render","App","jwt_decode","authUser","exact","initialAuthState","defaultProfileState","combineReducers","action","concat","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4fb8696.chunk.js","sourcesContent":["// HELPER TO STORE URLS\r\n\r\nconst API_ROOT = 'http://codeial.com:8000/api/v2';\r\n\r\nexport const APIUrls = {\r\n    login : () => `${API_ROOT}/users/login`,\r\n    signup : () => `${API_ROOT}/users/signup`,\r\n    editProfile : () => `${API_ROOT}/users/edit`,\r\n    userProfile : (userId) => `${API_ROOT}/users/${userId}`,\r\n    fetchPosts: (page = 1, limit = 5) => `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n    fetchFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n    addFriends: (userId) => `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n    removeFriends: (userId) => `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n }","import {UPDATE_POSTS} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\n\r\n\r\nexport function fetchPosts(){\r\n    return (dispatch) => {\r\n        const url = APIUrls.fetchPosts();\r\n        fetch(url)\r\n        .then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            console.log('data', data);\r\n            dispatch( updatePosts(data.data.posts) )\r\n        });\r\n    };\r\n}\r\n\r\nexport function updatePosts(posts){\r\n    return {\r\n        type : UPDATE_POSTS,\r\n        posts,\r\n    }\r\n}","export const UPDATE_POSTS = 'UPDATE_POSTS';\r\n\r\n// LOGIN ACTION TYPES\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\n// TOKEN PERSISTENT\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\n// SIGNUP ACTION TYPES  \r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\r\n\r\n// EDIT USER TYPES\r\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS';\r\nexport const EDIT_USER_FAIL = 'EDIT_USER_FAIL';\r\n\r\n// USER PROFILE\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'; \r\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'; \r\nexport const FETCH_USER_PROFILE_START = 'FETCH_USER_PROFILE_START'; \r\n\r\n// FRIENDS\r\nexport const FETCH_USER_FRIEND = 'FETCH_USER_FRIEND'; \r\nexport const ADD_FRIEND = 'ADD_FRIEND'; \r\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND'; ","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass PostList extends Component{\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n          <div className=\"posts-list\">\r\n            {posts.map((post) => (\r\n              <div className=\"post-wrapper\" key={post._id}>\r\n                <div className=\"post-header\">\r\n                  <div className=\"post-avatar\">\r\n                    <Link to={`/user/${post.user._id}`}>\r\n                    <img\r\n                      src=\"https://www.flaticon.com/svg/static/icons/svg/3237/3237472.svg\"\r\n                      alt=\"user-pic\"\r\n                    />\r\n                    </Link>\r\n                    <div>\r\n                      <span className=\"post-author\">{post.user.name}</span>\r\n                      <span className=\"post-time\">a minute ago</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"post-content\">{post.content}</div>\r\n    \r\n                  <div className=\"post-actions\">\r\n                    <div className=\"post-like\">\r\n                      <img\r\n                        src=\"https://www.flaticon.com/svg/static/icons/svg/1076/1076984.svg\"\r\n                        alt=\"likes-icon\"\r\n                      />\r\n                      <span>{post.likes.length}</span>\r\n                    </div>\r\n    \r\n                    <div className=\"post-comments-icon\">\r\n                      <img\r\n                        src=\"https://www.flaticon.com/svg/static/icons/svg/831/831264.svg\"\r\n                        alt=\"comments-icon\"\r\n                      />\r\n                      <span>{post.comments.length}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"post-comment-box\">\r\n                    <input placeholder=\"Start typing a comment\" />\r\n                  </div>\r\n    \r\n                  <div className=\"post-comments-list\">\r\n                    <div className=\"post-comments-item\">\r\n                      <div className=\"post-comment-header\">\r\n                        <span className=\"post-comment-author\">Bill</span>\r\n                        <span className=\"post-comment-time\">a minute ago</span>\r\n                        <span className=\"post-comment-likes\">22</span>\r\n                      </div>\r\n    \r\n                      <div className=\"post-comment-content\">Random comment</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nPostList.propTypes = {\r\n    posts : propTypes.array.isRequired,\r\n}\r\n\r\nexport default PostList;","// HELPER TO CONVERT PARAMS IN URLS\r\n\r\nexport function getFormBody (params) {\r\n    let formBody = [];\r\n\r\n    for (let property in params) {\r\n        \r\n        let encodedKey = encodeURIComponent(property); // 'user name' => 'user%20name'\r\n        let encodedValue = encodeURIComponent(params[property]); //'Shivani J' => 'Shivani%20J\r\n\r\n        formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n\r\n    return formBody.join('&');\r\n}\r\n\r\n\r\nexport function getAuthTokenFromLocalStorage() {\r\n    return localStorage.getItem('token');\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { logoutUser } from '../actions/auth';\r\n\r\nclass Navbar extends React.Component{\r\n\r\n  handleLogout = () => {\r\n    // REMOVING JWT TOKEN IN LOCAL STORAGE\r\n    localStorage.removeItem('token');\r\n    \r\n    this.props.dispatch( logoutUser() );\r\n  };\r\n\r\n  render(){\r\n    const {auth} = this.props;\r\n\r\n    return (\r\n    <nav className='nav'>\r\n          <div className='left-div'>    \r\n            <Link to=\"/\">\r\n            <img className='logo-icons' src=\"https://www.flaticon.com/svg/static/icons/svg/3437/3437338.svg\" alt=\"logo\" />\r\n            <div className='logo'>Codial</div>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className='search-container'>\r\n            <input placeholder=\"Search\" />\r\n            <div className=\"search-results\">\r\n              <ul>\r\n                <li className=\"search-results-row\">\r\n                  <img  src=\"https://www.flaticon.com/svg/static/icons/svg/3237/3237447.svg\" alt=\"User Avatar\"/>\r\n                  <span>Shivani J</span>\r\n                </li>\r\n                <li className=\"search-results-row\">\r\n                  <img  src=\"https://www.flaticon.com/svg/static/icons/svg/3237/3237447.svg\" alt=\"User Avatar\"/>\r\n                  <span>Shivani J</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='right-nav'>\r\n            {auth.isLoggedIn && \r\n            <div className='user'>\r\n              <Link to=\"/settings\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3237/3237447.svg\" alt=\"User Avatar\" id=\"user-dp\"/>\r\n              </Link>  \r\n                <span>{ auth.user.name }</span>\r\n            </div>\r\n            }\r\n            <div className=\"nav-links\">\r\n                {/* we use Link for going to urls instead of <a> for avoiding refresing of page (it interanally uses <a>) */}\r\n                <ul>  \r\n                  {!auth.isLoggedIn && <li>\r\n                    <Link to=\"/login\">Login</Link>\r\n                    </li>\r\n                  }                  \r\n                  {auth.isLoggedIn && \r\n                    <li onClick={this.handleLogout}>\r\n                      Logout\r\n                    </li>\r\n                  }  \r\n                  {!auth.isLoggedIn && <li>\r\n                    <Link to=\"/signup\">Register</Link>\r\n                    </li>\r\n                  } \r\n                    \r\n                </ul>\r\n                \r\n            </div>\r\n          </div>\r\n        </nav>\r\n    )   \r\n  } \r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import { EDIT_USER_FAIL, EDIT_USER_SUCCESS, LOGIN_FAILED, LOGIN_START, LOGIN_SUCCESS} from './actionTypes';\r\nimport { SIGNUP_FAILED, SIGNUP_START, SIGNUP_SUCCESS } from './actionTypes';\r\nimport {AUTHENTICATE_USER, LOGOUT, CLEAR_AUTH_STATE } from '../actions/actionTypes';\r\n\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getFormBody, getAuthTokenFromLocalStorage } from '../helpers/utils';\r\n\r\n// FOR LOGIN\r\nexport function startLogin() {\r\n return {\r\n     type : LOGIN_START,\r\n };   \r\n}\r\n\r\nexport function loginFailed(errorMsg) {\r\n    return {\r\n        type : LOGIN_FAILED,\r\n        error: errorMsg,\r\n    }\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n    return {\r\n        type : LOGIN_SUCCESS,\r\n        user,\r\n    }\r\n}\r\n\r\nexport function login(email, password) {\r\n    return (dispatch) => {\r\n        dispatch(startLogin());\r\n        const url = APIUrls.login();\r\n\r\n        fetch(url, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body : getFormBody({ email, password }),\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            console.log('EDit data' , data);\r\n            if ( data.success) {\r\n                localStorage.setItem('token', data.data.token);\r\n                dispatch(loginSuccess(data.data.user))\r\n                return;\r\n            }\r\n            dispatch(loginFailed(data.message));\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// FOR SIGNUP\r\nexport function startSignup() {\r\n    return {\r\n        type : SIGNUP_START,\r\n    };   \r\n}\r\n\r\nexport function signupFailed(errorMsg) {\r\n    return {\r\n        type : SIGNUP_FAILED,\r\n        error: errorMsg,\r\n    }\r\n}\r\n\r\nexport function signupSuccess(user) {\r\n    return {\r\n        type : SIGNUP_SUCCESS,\r\n        user,\r\n    }\r\n}\r\n\r\nexport function signup(username, email, password, confirmPassword) {\r\n    return (dispatch) => {\r\n        dispatch(startSignup());\r\n        const url = APIUrls.signup();\r\n\r\n        fetch(url, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body : getFormBody({ \r\n                name: username, \r\n                email, \r\n                password, \r\n                confirm_password : confirmPassword \r\n            }),\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            console.log('data' , data);\r\n            if ( data.success ) {\r\n                // store token in localStorage\r\n                localStorage.setItem('token', data.data.token);\r\n                dispatch( signupSuccess(data.data.user) )\r\n                return;\r\n            }\r\n            dispatch( signupFailed(data.message) );\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// PERSIST USER\r\nexport function authUser(user) {\r\n    return {\r\n        type: AUTHENTICATE_USER,\r\n        user,\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    return{\r\n        type: LOGOUT,\r\n    }\r\n}\r\n\r\nexport function clearAuthState(){\r\n    return{\r\n        type: CLEAR_AUTH_STATE,\r\n    }\r\n}\r\n\r\n\r\n\r\n// EDIT USER PROFILE\r\nexport function editUserSuccessful(user) {\r\n    return{\r\n        type: EDIT_USER_SUCCESS,\r\n        user,\r\n    }\r\n}\r\n\r\nexport function editUserFail(error) {\r\n    return{\r\n        type: EDIT_USER_FAIL,\r\n        error,\r\n    }\r\n}\r\n\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n    return (dispatch) => {\r\n       \r\n        const url = APIUrls.editProfile();\r\n\r\n        fetch(url, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:  `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n            },\r\n            body : getFormBody({ name,\r\n                                 password ,\r\n                                 confirm_password: confirmPassword,\r\n                                 id: userId}),\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            console.log('data' , data);\r\n            if ( data.success) {\r\n                \r\n                dispatch( editUserSuccessful(data.data.user));\r\n                \r\n                if (data.data.token) {\r\n                    localStorage.setItem('token', data.data.token);\r\n                }\r\n                return;\r\n            }\r\n\r\n            dispatch( editUserFail(data.message));\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {PostList, Friendlist} from './';\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n\r\n    render(){\r\n        const { posts,friends, isLoggedIn } = this.props;\r\n        // console.log(\"props of router\" , this.props);  \r\n        // console.log(\"FRiends\", friends);\r\n                  \r\n        return(\r\n            <div className=\"home\">\r\n                <PostList posts={posts} /> \r\n                {isLoggedIn && <Friendlist friends={friends} />}\r\n            </div>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Page404(){\r\n    return (\r\n        <div>\r\n            <h1 className='not-found'>OOPS! NOTHING FOUND</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {clearAuthState, login} from '../actions/auth';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // form handling with uncontrolled(Dom) components\r\n        // this.emailInputRef = React.createRef();\r\n        // this.passwordInputRef  = React.createRef();\r\n\r\n        // form handling with controlled(React) components\r\n        this.state = {\r\n            email : '',\r\n            password : '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.dispatch( clearAuthState() );\r\n    }\r\n\r\n    handleEmailChange = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        // console.log(\"emailRef\", this.emailInputRef.current.value);\r\n        // console.log(\"passwordRef\", this.passwordInputRef);\r\n        console.log(this.state);\r\n        const {email, password } = this.state;\r\n\r\n        if(email && password) {\r\n            this.props.dispatch( login(email, password) );\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {error, inProgress, isLoggedIn } = this.props.auth;\r\n        const {from} = this.props.location.state || { from: {pathname: '/'} };\r\n            \r\n        if (isLoggedIn) {\r\n            return <Redirect to={from} />\r\n        }\r\n\r\n        return(\r\n            <form className='login-form'>\r\n                <span className='login-signup-header'>Login</span> \r\n\r\n                {error && <div className='alert error-dailog'>{error}</div>}\r\n\r\n                <div className='field'>\r\n                    <input type=\"email\" placeholder=\"Email\" required \r\n                    // ref={this.emailInputRef} \r\n                    onChange={this.handleEmailChange}\r\n                    />\r\n                </div>\r\n                <div className='field'>\r\n                    <input type=\"password\" placeholder=\"Password\" required \r\n                    // ref={this.passwordInputRef} \r\n                    onChange={this.handlePasswordChange}\r\n                    />\r\n                </div>\r\n                <div className='field'>\r\n                    {\r\n                        inProgress ? (\r\n                        <button onClick={this.handleFormSubmit} disabled={inProgress} >Logging in......</button> ) : (\r\n                        <button onClick={this.handleFormSubmit} disabled={inProgress} >Login</button> )\r\n\r\n                    }                    \r\n                </div>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        auth : state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signup, startSignup, clearAuthState } from '../actions/auth';\r\n\r\n\r\nclass Signup extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            email : '',\r\n            password : '',\r\n            confirmPassword : '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.dispatch( clearAuthState() );\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleConfirmPasswordChange = (e) => {\r\n        this.setState({\r\n            confirmPassword: e.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(this.state);\r\n        const {username, email, password, confirmPassword} = this.state;\r\n\r\n        if(username && email && password && confirmPassword) {\r\n            this.props.dispatch( startSignup() );\r\n            this.props.dispatch( signup(username, email, password, confirmPassword) );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n                  \r\n        const {error, inProgress, isLoggedIn } = this.props.auth;\r\n\r\n        if (isLoggedIn) {\r\n            return <Redirect to='/'></Redirect>\r\n        }\r\n\r\n        return(\r\n            <form className='login-form'>\r\n                <span className='login-signup-header'>Signup</span>\r\n\r\n                {error && <div className='alert error-dailog'>{error}</div>}\r\n\r\n                <div className='field'>\r\n                    <input type=\"text\" placeholder=\"username\" required\r\n                    onChange={this.handleNameChange} \r\n                    />\r\n                </div>\r\n                <div className='field'>\r\n                    <input type=\"email\" placeholder=\"Email\" required\r\n                    onChange = {this.handleEmailChange}\r\n                    />\r\n                </div>\r\n                <div className='field'>\r\n                    <input type=\"password\" placeholder=\"Password\" required\r\n                    onChange={this.handlePasswordChange}\r\n                    />\r\n                </div>\r\n                <div className='field'>\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" required\r\n                    onChange={this.handleConfirmPasswordChange}\r\n                    />\r\n                </div>\r\n                {/* <div className='field'>                   \r\n                    <button onClick={this.handleFormSubmit} disabled={inProgress} >Signup</button>               \r\n                </div> */}\r\n                <div className='field'>\r\n                    {\r\n                        inProgress ? (\r\n                        <button onClick={this.handleFormSubmit} disabled={inProgress} >Signing up......</button> ) : (\r\n                        <button onClick={this.handleFormSubmit} disabled={inProgress} >Signup</button> )\r\n\r\n                    }                    \r\n                </div>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        auth : state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Signup);","import React , {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearAuthState, editUser } from '../actions/auth';\r\n\r\nclass Settings extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            editMode: false,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch( clearAuthState() );\r\n    }\r\n\r\n    handleChange = (fieldName, val) => {\r\n        this.setState(\r\n            {\r\n                [fieldName] : val\r\n            }\r\n        )\r\n        this.props.dispatch( clearAuthState() );\r\n    }\r\n\r\n    handleSave = () => {\r\n        const { password, confirmPassword, name } = this.state;\r\n        const { user } = this.props.auth;\r\n\r\n        this.props.dispatch( editUser(name, password, confirmPassword, user._id));\r\n    }\r\n\r\n    render(){\r\n        const { user, error } = this.props.auth;\r\n        const { editMode } = this.state;\r\n\r\n        return (\r\n            <div className='settings'>\r\n                <div className='img-container'>\r\n                    <img \r\n                        src=\"https://www.flaticon.com/svg/static/icons/svg/163/163802.svg\" alt=\"user-dp\"\r\n                    />\r\n                </div>\r\n\r\n                { error && <div className=\"alert error-dailog\"> { error} </div>}\r\n                { error===false && <div className=\"alert success-dailog\"> Profile Successfully Edited </div>}\r\n                <div className=\"field\">\r\n                    <div className='field-label'>Email</div>\r\n                    <div className='field-value'> {user.email} </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <div className='field-label'>Name</div>\r\n                    {editMode ? (\r\n                        <input type=\"text\"\r\n                            onChange={(e) => this.handleChange('name', e.target.value) }\r\n                            value={this.state.name}\r\n                        />\r\n                    ) : (\r\n                        <div className='field-value'> {user.name} </div>\r\n                    )}\r\n                </div>\r\n\r\n                {editMode && \r\n                    <div className=\"field\">\r\n                        <div className='field-label'>New Password</div>\r\n                        <input type=\"password\"\r\n                            onChange={(e) => this.handleChange('password', e.target.value) }\r\n                            value={this.state.password}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {editMode && \r\n                    <div className=\"field\">\r\n                        <div className='field-label'>Confirm Password</div>\r\n                        <input type=\"password\"\r\n                            onChange={(e) => this.handleChange('confirmPassword', e.target.value) }\r\n                            value={this.state.confirmPassword}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div className='btn-grp'>\r\n                    {editMode ? (\r\n                        <button className=\"button save-btn\"\r\n                        onClick={() => this.handleSave()}>Save</button>\r\n                    ) : (\r\n                        <button className=\"button edit-btn\"\r\n                         onClick={() => this.handleChange('editMode', true)}>Edit Profile</button>\r\n                    )}\r\n\r\n                    {editMode && <div className=\"go-back\"\r\n                     onClick={() => this.handleChange('editMode', false)}> Go Back </div> }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps( {auth} ){\r\n    return {\r\n        auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Settings);","import { APIUrls } from '../helpers/urls';\r\nimport { FETCH_USER_FRIEND, ADD_FRIEND, REMOVE_FRIEND } from './actionTypes';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\n\r\nexport function fetchFriends(userId) {\r\n    return (dispatch) => {\r\n        \r\n        const url = APIUrls.fetchFriends(userId);\r\n\r\n        fetch(url, {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:  `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n            },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log('data friends', data.data.friends);\r\n            dispatch( fetchUserFriendSuccess(data.data.friends) );\r\n        });\r\n    }\r\n}\r\n\r\nexport function fetchUserFriendSuccess(friends){\r\n    return {\r\n        type : FETCH_USER_FRIEND,\r\n        friends,\r\n    }\r\n}\r\n\r\nexport function addFriend(friend){\r\n    return {\r\n        type : ADD_FRIEND,\r\n        friend,\r\n    }\r\n}\r\n\r\nexport function removeFriend(userId){\r\n    return {\r\n        type : REMOVE_FRIEND,\r\n        userId,\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProfile } from '../actions/profile';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\nimport { addFriend, removeFriend } from '../actions/friends';\r\n\r\nclass User extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            success : null,\r\n            error : null,\r\n            successMessage : null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {match} = this.props;\r\n\r\n        if(match.params.userId) {\r\n            // dispatch an action\r\n            this.props.dispatch( fetchProfile( match.params.userId ) );\r\n        }\r\n    }\r\n\r\n    checkUserFriend() {\r\n        const {match, friends} = this.props;\r\n        const userId = match.params.userId;\r\n\r\n        const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n        if(index !== -1){\r\n            return true;\r\n        }\r\n\r\n        return false;       \r\n    }\r\n    \r\n    handleAddFriend = async () => {\r\n\r\n        const userId = this.props.match.params.userId;\r\n        const url = APIUrls.addFriends(userId);\r\n\r\n        const options = {\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:  `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n            },\r\n        }\r\n        \r\n        const response = await fetch(url, options);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n            this.setState({\r\n                success: true,\r\n                successMessage: \"Friend added successfully\",\r\n            });\r\n\r\n            this.props.dispatch( addFriend(data.data.friendship) );\r\n        }\r\n        else {\r\n            this.setState({\r\n                success: null,\r\n                error : data.message,\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    handleRemoveFriend = async () => {\r\n        const {match} = this.props;\r\n        const userId = match.params.userId;\r\n        const url = APIUrls.removeFriends(userId);\r\n\r\n        const options = {\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:  `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n            },\r\n        }\r\n\r\n        const response = await fetch(url, options);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n            console.log(\"Data for removal userID : \", userId);\r\n            this.setState({\r\n                success: true,\r\n                successMessage: \"Friend Removed successfully\",\r\n            });\r\n\r\n            this.props.dispatch( removeFriend(userId) );\r\n        }\r\n        else {\r\n            this.setState({\r\n                success: null,\r\n                error : data.message,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const {match : {params},\r\n                profile } = this.props;\r\n        console.log('this.props', params);\r\n        const user = profile.user;\r\n        const {success, successMessage, error} = this.state;\r\n\r\n        if (profile.inProgress) {\r\n            return <h1>Loading....</h1>\r\n        }\r\n\r\n        const ifUserFriend = this.checkUserFriend();\r\n\r\n        return (\r\n            <div className='settings'>\r\n                <div className='img-container'>\r\n                    <img \r\n                        src=\"https://www.flaticon.com/svg/static/icons/svg/163/163802.svg\" alt=\"user-dp\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <div className='field-label'>Email</div>\r\n                    <div className='field-value'> {user.email} </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <div className='field-label'>Name</div>\r\n                    <div className='field-value'> {user.name} </div>\r\n                </div>\r\n\r\n                {   !ifUserFriend ? \r\n                    <button className='save-btn'\r\n                    onClick={this.handleAddFriend}>Add Friend</button> :                \r\n                    <button className='save-btn'\r\n                    onClick={this.handleRemoveFriend}>Remove Friend</button> \r\n                }\r\n\r\n                {success && <div className=\"alert success-dailog\">{successMessage} </div>}\r\n                {error && <div className=\"alert error-dailog\">{error} </div>}\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps( {profile, friends} ){\r\n    return {\r\n        profile,\r\n        friends,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(User);","import { FETCH_USER_PROFILE_START, USER_PROFILE_FAIL, USER_PROFILE_SUCCESS } from \"./actionTypes\";\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\n\r\nexport function fetchProfileStart() {\r\n    return {\r\n        type : FETCH_USER_PROFILE_START,\r\n    }\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n    return {\r\n        type : USER_PROFILE_SUCCESS,\r\n        user,\r\n    }\r\n}\r\n\r\nexport function userProfileFail(error) {\r\n    return {\r\n        type : USER_PROFILE_FAIL,\r\n        error,\r\n    }\r\n}\r\n\r\nexport function fetchProfile(userId) {\r\n    return (dispatch) => {\r\n        dispatch(fetchProfileStart());\r\n        const url = APIUrls.userProfile(userId);\r\n\r\n        fetch(url, {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:  `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if( data.success ){\r\n                dispatch( userProfileSuccess(data.data.user) );\r\n                return;\r\n            }\r\n            dispatch( userProfileFail(data.message) );\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Friendlist extends React.Component{\r\n    render(){\r\n        const {friends} = this.props;\r\n        // console.log(\"f : \", friends.length);\r\n\r\n        // friends.map((friend) => {\r\n        //     console.log(friend);\r\n        // })\r\n        return (\r\n        <div className=\"friends-list\">\r\n            <div className=\"header\">Friends</div>\r\n\r\n            { \r\n                friends && friends.length===0 && (\r\n                    <div className='no-friends'>No friends found</div>\r\n                )\r\n            }\r\n\r\n            {\r\n                friends && friends.map( (friend) => (\r\n\r\n                    <Link className=\"friends-item\" to={`/user/${friend.to_user._id}`}>\r\n                        <span className=\"friends-img\">\r\n                            <img src=\"https://www.flaticon.com/svg/static/icons/svg/3187/3187459.svg\" alt=\"Friends image\"/>\r\n                        </span>\r\n                        <span className=\"friends-name\"> {friend.to_user.name} </span>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friendlist;","import React from 'react';\nimport {connect} from 'react-redux';\nimport propTypes from 'prop-types';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport {fetchPosts} from '../actions/posts';\nimport { Navbar, Home, Page404, Login, Signup, Settings, User } from './';\nimport jwt_decode from 'jwt-decode';\nimport { authUser } from '../actions/auth';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { fetchFriends } from '../actions/friends';\n\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedIn, path, component: Component } = privateRouteProps;\n\n  // the location stores the previous location which user wanted to access\n  // Instaed of redirection everytime to home page it will redirected which the user was trying to access\n  return (\n    <Route \n      path={path}\n      render={(props) => {\n      return isLoggedIn ? <Component {...props} /> : <Redirect to={{\n        pathname: '/login',\n        state : {\n          from: props.location,\n        }\n      }} />;\n      }}\n    />\n  );\n}\n\nclass App extends React.Component{\n\n  componentDidMount(){\n    this.props.dispatch( fetchPosts() );\n\n    //  STORING JWT TOKEN IN LOCAL STORAGE\n    const token = getAuthTokenFromLocalStorage();\n\n    if (token) {\n      const user = jwt_decode(token);\n      console.log('user', user);\n\n      this.props.dispatch(\n        authUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n\n      this.props.dispatch( fetchFriends() );\n    }\n  }\n\n  render(){\n    const { posts, auth, friends }  = this.props;\n    \n    return (\n      <Router>\n        <div>\n          <Navbar />\n                   \n          {/* exact path for routes */}\n          <Switch>\n            <Route exact={true} path=\"/\" \n              render={ (props) => {\n                return <Home {...props} \n                        posts={posts} \n                        friends={ friends }\n                        isLoggedIn={ auth.isLoggedIn }/>\n              } }\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute path=\"/settings\" component={Settings} isLoggedIn={auth.isLoggedIn} />\n            {/* :userId tells router that route is params */}\n            <PrivateRoute path=\"/user/:userId\" component={User} isLoggedIn={auth.isLoggedIn} />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    posts : state.posts,\n    auth : state.auth,\n    friends : state.friends,\n  }\n};\n\n// this check whether the prop type is what is required\nApp.propTypes = {\n  posts : propTypes.array.isRequired,\n}\n\nexport default connect(mapStateToProps)(App);\n","import {LOGIN_START, \r\n        LOGIN_SUCCESS, \r\n        LOGIN_FAILED, \r\n        AUTHENTICATE_USER, \r\n        LOGOUT, \r\n        CLEAR_AUTH_STATE, \r\n        EDIT_USER_SUCCESS, \r\n        EDIT_USER_FAIL} from '../actions/actionTypes';\r\nimport { SIGNUP_FAILED,\r\n         SIGNUP_START, \r\n         SIGNUP_SUCCESS } from '../actions/actionTypes';\r\n\r\nconst initialAuthState = {\r\n    user: {},\r\n    error: null,\r\n    isLoggedIn: false,\r\n    inProgress: false,\r\n}\r\n\r\nexport default function auth(state = initialAuthState, action){\r\n    switch (action.type) {\r\n        case CLEAR_AUTH_STATE: {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        }\r\n        case LOGIN_START:\r\n        case SIGNUP_START :\r\n            return {\r\n                ...state,\r\n                inProgress: true,\r\n            };\r\n\r\n        case LOGIN_SUCCESS:\r\n        case SIGNUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n                isLoggedIn: true,\r\n                inProgress: false,\r\n                error: null,\r\n            };\r\n\r\n        case LOGIN_FAILED:\r\n        case SIGNUP_FAILED:\r\n            return{\r\n                ...state,\r\n                inProgress: false,\r\n                error: action.error,\r\n            }\r\n\r\n        case AUTHENTICATE_USER: \r\n            return{\r\n                ...state,\r\n                user : action.user,\r\n                isLoggedIn: true,\r\n            }\r\n\r\n        case LOGOUT:\r\n            return{\r\n                ...state,\r\n                user: {},\r\n                isLoggedIn: false,\r\n            }\r\n\r\n        case EDIT_USER_SUCCESS: \r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n                error: false\r\n            }\r\n\r\n        case EDIT_USER_FAIL: \r\n            return{\r\n                ...state,\r\n                error: action.error,\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_USER_PROFILE_START,\r\n         USER_PROFILE_FAIL, \r\n         USER_PROFILE_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialAuthState = {\r\n    user: {},\r\n    error: null,\r\n    success: null,\r\n    inProgress: false,\r\n}\r\n\r\nexport default function  profile( state=initialAuthState, action ) {\r\n    switch (action.type) {\r\n        case USER_PROFILE_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                inProgress: false,\r\n                success: true,\r\n            }\r\n        };\r\n\r\n        case USER_PROFILE_FAIL : {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                inProgress: false,\r\n            }\r\n        };\r\n\r\n        case FETCH_USER_PROFILE_START : {\r\n            return {\r\n                ...state,\r\n                inProgress : true\r\n            }\r\n        };\r\n\r\n        default : {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}","import { ADD_FRIEND, FETCH_USER_FRIEND, REMOVE_FRIEND } from \"../actions/actionTypes\";\r\n\r\nconst defaultProfileState = [];\r\n\r\nexport default function friends(state =defaultProfileState, action){\r\n    switch(action.type){\r\n        case FETCH_USER_FRIEND : \r\n            return [...action.friends];\r\n\r\n        case ADD_FRIEND : \r\n            return state.concat(action.friend);\r\n\r\n        case REMOVE_FRIEND : \r\n            return state.filter((friend) => friend.to_user._id !== action.userId);\r\n                               \r\n        default : \r\n            return state;\r\n    }\r\n    \r\n}","import {combineReducers} from 'redux';\r\nimport posts from './posts';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport friends from './friends';\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    auth,\r\n    profile,\r\n    friends,\r\n}) ;","import { UPDATE_POSTS } from '../actions/actionTypes';\r\n\r\nexport default function posts(state =[], action){\r\n    switch(action.type){\r\n        case UPDATE_POSTS : \r\n            return action.posts;\r\n                               \r\n        default : \r\n            return state;\r\n    }\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport App from './components/App';\nimport {configureStore} from './store';\n\nconst store = configureStore();\nconsole.log('store : ', store.getState());\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport reducer from '../reducers';\r\n\r\nlet store;\r\n\r\nexport function configureStore(){\r\n    store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n    return store;\r\n}\r\n"],"sourceRoot":""}